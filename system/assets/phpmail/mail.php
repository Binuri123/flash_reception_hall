<?php
//These 5 lines are mandatory when using PHPMailer to send emails.
use PHPMailer\PHPMailer\PHPMailer; //use the PHPMailer Class Written in object oriented manner 
use PHPMailer\PHPMailer\Exception; //use the Exception Class Written in object oriented manner

//Define the source of the above classes (path to the file defined the above classes)
require 'PHPMailer/src/Exception.php';
require 'PHPMailer/src/PHPMailer.php';
require 'PHPMailer/src/SMTP.php';

//send_email is a customized email which can be used every time we have to send an email - a reusable function
//$to - Receivers' email address
//$toname - Receivers' name
//$subject - The subject that should be include in the email
//$body - The body text of the email
//$altbody - The content which should be displayed even when the body text couldn't be loaded 
//(ex: Sometimes the browsers wouldn't support the html content so that it can show this altbody text instead)
function send_email($to=null,$toname=null,$subject=null,$body=null,$altbody=null) {

    $mail = new PHPMailer(true); //Create a new mail object by calling its constructor defined inside the PHPMailer
    try { //try catch is used for exception handling in object oriented programming
        //Server settings
        $mail->SMTPDebug = 0;// Enable verbose debug output (this will show the whole process happenes step by step when sending an email. 
        //if we assign 0 to this variable it would not display those steps.
        //it can be removed in the deployement phase but in the development phase it will require to find the error in the process)
        $mail->isSMTP();// Instruct to send email using SMTP server.
        //the default parameter pass to the function will be true it means to send using SMTP 
        //but if we pass the parameter as false it will use another email server like POP3
        $mail->Host = 'smtp.gmail.com';// Set the SMTP server to send through
        $mail->SMTPAuth = true;// Enable SMTP authentication (If authentication failed then it will not send the email.
        //If we assign false to this it will not check for the authentication)
        $mail->Username = 'flashreceptionhall@gmail.com';// SMTP username (Senders' email address)
        $mail->Password = 'fvhyijdyeapqznnn';// SMTP password (Autogenerated password in app password)
        $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS;// Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` encouraged 
        //ENCRYPTION_SMTPS is a variable defined inside the PHPMailer
        $mail->Port = 465;// TCP port to connect to, use 465 for `PHPMailer::ENCRYPTION_SMTPS` above
        
        //Recipients
        //This email and the Name will shown to the receiver as the senders' details
        $mail->setFrom('flashreceptionhall@gmail.com', 'FlashReceptionHall');
	
        $mail->addAddress($to, $toname);// Add a recipient
        // Name is optional
        //This email address will receive the replies from the recipient
        $mail->addReplyTo('flashreceptionhall@gmail.com', 'Information');
        //$mail->addCC('cc@example.com'); uncomment and add a specific email if want to CC the mail
        //$mail->addBCC('bcc@example.com'); uncomment and add a specific email if want to BCC the mail
        // Attachments
        // $mail->addAttachment('/var/tmp/file.tar.gz');// Add attachments
        // $mail->addAttachment('/tmp/image.jpg', 'new.jpg');// Optional name
        // Content
        $mail->isHTML(true); // Set email format to HTML,if you want to send only a plain text you can set value to false
        $mail->Subject = $subject;
        $mail->Body = $body;
        $mail->AltBody = $altbody;

        $mail->send();//Call the send method in mail object
        //echo 'Message has been sent';
    } catch (Exception $e) {
        echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
    }
}


        
        
?>